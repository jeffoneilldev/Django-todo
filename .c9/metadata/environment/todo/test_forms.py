{"filter":false,"title":"test_forms.py","tooltip":"/todo/test_forms.py","undoManager":{"mark":11,"position":11,"stack":[[{"start":{"row":3,"column":0},"end":{"row":6,"column":30},"action":"insert","lines":["class TestDjango(TestCase):","","    def test_is_this_thing_on(self):","        self.assertEqual(1, 1)"],"id":2}],[{"start":{"row":6,"column":30},"end":{"row":7,"column":14},"action":"insert","lines":["Python 3","manage.py test"],"id":3}],[{"start":{"row":7,"column":0},"end":{"row":7,"column":14},"action":"remove","lines":["manage.py test"],"id":4}],[{"start":{"row":6,"column":38},"end":{"row":6,"column":39},"action":"insert","lines":[" "],"id":5}],[{"start":{"row":6,"column":39},"end":{"row":6,"column":53},"action":"insert","lines":["manage.py test"],"id":6}],[{"start":{"row":6,"column":30},"end":{"row":6,"column":53},"action":"remove","lines":["Python 3 manage.py test"],"id":7}],[{"start":{"row":3,"column":10},"end":{"row":3,"column":16},"action":"remove","lines":["Django"],"id":8},{"start":{"row":3,"column":10},"end":{"row":3,"column":11},"action":"insert","lines":["T"]},{"start":{"row":3,"column":11},"end":{"row":3,"column":12},"action":"insert","lines":["o"]},{"start":{"row":3,"column":12},"end":{"row":3,"column":13},"action":"insert","lines":["d"]},{"start":{"row":3,"column":13},"end":{"row":3,"column":14},"action":"insert","lines":["o"]}],[{"start":{"row":3,"column":14},"end":{"row":3,"column":15},"action":"insert","lines":["I"],"id":9},{"start":{"row":3,"column":15},"end":{"row":3,"column":16},"action":"insert","lines":["t"]},{"start":{"row":3,"column":16},"end":{"row":3,"column":17},"action":"insert","lines":["e"]},{"start":{"row":3,"column":17},"end":{"row":3,"column":18},"action":"insert","lines":["m"]},{"start":{"row":3,"column":18},"end":{"row":3,"column":19},"action":"insert","lines":["F"]},{"start":{"row":3,"column":19},"end":{"row":3,"column":20},"action":"insert","lines":["o"]}],[{"start":{"row":3,"column":20},"end":{"row":3,"column":21},"action":"insert","lines":["r"],"id":10},{"start":{"row":3,"column":21},"end":{"row":3,"column":22},"action":"insert","lines":["m"]}],[{"start":{"row":3,"column":12},"end":{"row":3,"column":13},"action":"remove","lines":["d"],"id":11}],[{"start":{"row":3,"column":12},"end":{"row":3,"column":13},"action":"insert","lines":["D"],"id":12}],[{"start":{"row":1,"column":0},"end":{"row":7,"column":0},"action":"remove","lines":["","# Create your tests here.","class TestToDoItemForm(TestCase):","","    def test_is_this_thing_on(self):","        self.assertEqual(1, 1)",""],"id":13},{"start":{"row":1,"column":0},"end":{"row":13,"column":75},"action":"insert","lines":["from .forms import ItemForm","","# Create your tests here.","class TestToDoItemForm(TestCase):","","    def test_can_create_an_item_with_just_a_name(self):","        form = ItemForm({'name': 'Create Tests'})","        self.assertTrue(form.is_valid())","    ","    def test_correct_message_for_missing_name(self):","        form = ItemForm({'form': ''})","        self.assertFalse(form.is_valid())","        self.assertEqual(form.errors['name'], [u'This field is required.'])"]}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":13,"column":75},"end":{"row":13,"column":75},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1562349985564,"hash":"4880331ccad7e7d3df44e93e5f1781d802ea254a"}